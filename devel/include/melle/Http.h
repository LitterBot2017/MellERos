// Generated by gencpp from file melle/Http.msg
// DO NOT EDIT!


#ifndef MELLE_MESSAGE_HTTP_H
#define MELLE_MESSAGE_HTTP_H

#include <ros/service_traits.h>


#include <melle/HttpRequest.h>
#include <melle/HttpResponse.h>


namespace melle
{

struct Http
{

typedef HttpRequest Request;
typedef HttpResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Http
} // namespace melle


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::melle::Http > {
  static const char* value()
  {
    return "2236ff0ca90aedd2de55c88e9611d43e";
  }

  static const char* value(const ::melle::Http&) { return value(); }
};

template<>
struct DataType< ::melle::Http > {
  static const char* value()
  {
    return "melle/Http";
  }

  static const char* value(const ::melle::Http&) { return value(); }
};


// service_traits::MD5Sum< ::melle::HttpRequest> should match 
// service_traits::MD5Sum< ::melle::Http > 
template<>
struct MD5Sum< ::melle::HttpRequest>
{
  static const char* value()
  {
    return MD5Sum< ::melle::Http >::value();
  }
  static const char* value(const ::melle::HttpRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::melle::HttpRequest> should match 
// service_traits::DataType< ::melle::Http > 
template<>
struct DataType< ::melle::HttpRequest>
{
  static const char* value()
  {
    return DataType< ::melle::Http >::value();
  }
  static const char* value(const ::melle::HttpRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::melle::HttpResponse> should match 
// service_traits::MD5Sum< ::melle::Http > 
template<>
struct MD5Sum< ::melle::HttpResponse>
{
  static const char* value()
  {
    return MD5Sum< ::melle::Http >::value();
  }
  static const char* value(const ::melle::HttpResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::melle::HttpResponse> should match 
// service_traits::DataType< ::melle::Http > 
template<>
struct DataType< ::melle::HttpResponse>
{
  static const char* value()
  {
    return DataType< ::melle::Http >::value();
  }
  static const char* value(const ::melle::HttpResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MELLE_MESSAGE_HTTP_H
